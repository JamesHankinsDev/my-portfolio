[{"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/index.js":"1","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/App.js":"2","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/reportWebVitals.js":"3","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/Logo/Logo.jsx":"4","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/TypeWriter/TypeWriter.jsx":"5","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/navigation/Header/Header.js":"6","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/LinkButton/LinkButton.jsx":"7","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/Home/Home.jsx":"8","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/AboutMe/AboutMe.jsx":"9","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/Resume/Resume.jsx":"10","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/Contact/Contact.jsx":"11","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/Switch.js":"12","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/Display Card/index.tsx":"13"},{"size":500,"mtime":1607027724600,"results":"14","hashOfConfig":"15"},{"size":587,"mtime":1608486774825,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607027724600,"results":"17","hashOfConfig":"15"},{"size":358,"mtime":1625186249999,"results":"18","hashOfConfig":"15"},{"size":1560,"mtime":1621533951443,"results":"19","hashOfConfig":"15"},{"size":1264,"mtime":1608487842806,"results":"20","hashOfConfig":"15"},{"size":352,"mtime":1608487941876,"results":"21","hashOfConfig":"15"},{"size":719,"mtime":1621535627873,"results":"22","hashOfConfig":"15"},{"size":93,"mtime":1607892413393,"results":"23","hashOfConfig":"15"},{"size":90,"mtime":1607892298640,"results":"24","hashOfConfig":"15"},{"size":108,"mtime":1607892270357,"results":"25","hashOfConfig":"15"},{"size":1373,"mtime":1608487058233,"results":"26","hashOfConfig":"15"},{"size":325,"mtime":1621535646718,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wzkp96",{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/index.js",[],["60","61"],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/App.js",["62","63","64","65","66","67"],"import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Header } from './navigation/Header/Header';\nimport { Home } from './pages/Home/Home';\nimport { AboutMe } from './pages/AboutMe/AboutMe';\nimport { Resume } from './pages/Resume/Resume';\nimport { Contact } from './pages/Contact/Contact';\nimport { SwitchComponent } from './Switch';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <SwitchComponent />\n      </div>\n    </Router>\n  );\n};\nexport default App;\n","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/reportWebVitals.js",[],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/Logo/Logo.jsx",[],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/TypeWriter/TypeWriter.jsx",["68"],"import React, { useState, useEffect } from 'react';\n\nexport const TypeWriter = ({ textArray, typeSpeed }) => {\n  const [state, setState] = useState({\n    text: '',\n    currentIndex: 0,\n    wordsTyped: 0,\n    writing: true,\n  });\n\n  const toggleIsTyping = () => {\n    setState((cs) => ({\n      ...cs,\n      writing: !state.writing,\n    }));\n  };\n\n  const animateTyping = () => {\n    const forwardTyping = () => {\n      setState((cs) => ({\n        ...cs,\n        text: textArray[state.wordsTyped % textArray.length].slice(0, [\n          state.currentIndex,\n        ]),\n        currentIndex: state.currentIndex + 1,\n      }));\n    };\n    const backwardTyping = () => {\n      setState((cs) => ({\n        ...cs,\n        text: state.text.slice(0, state.text.length - 1),\n        currentIndex: state.currentIndex - 1,\n      }));\n    };\n    state.writing ? forwardTyping() : backwardTyping();\n  };\n\n  const completeCurrentWord = () => {\n    setState((cs) => ({\n      ...cs,\n      wordsTyped: state.wordsTyped + 1,\n      currentIndex: 0,\n    }));\n  };\n\n  useEffect(() => {\n    if (\n      state.currentIndex ===\n        textArray[state.wordsTyped % textArray.length].length + 1 &&\n      state.writing\n    ) {\n      setTimeout(() => {\n        toggleIsTyping();\n      }, typeSpeed * 10);\n    } else if (state.currentIndex === -1) {\n      completeCurrentWord();\n      toggleIsTyping();\n    } else {\n      setTimeout(() => {\n        animateTyping();\n      }, typeSpeed);\n    }\n  }, [animateTyping, completeCurrentWord, toggleIsTyping]);\n\n  return <h3>{state.text}|</h3>;\n};\n","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/navigation/Header/Header.js",[],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/LinkButton/LinkButton.jsx",[],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/Home/Home.jsx",["69"],"import React, { useEffect, useState } from 'react';\nimport { DisplayCard } from '../../components/Display Card';\nimport HomeContent from './../../data/Home.json';\nimport './index.scss';\n\nexport const Home = ({ onRender }) => {\n  const [isActive, setIsActive] = useState(false);\n  const toggleIsActive = () => setIsActive(!isActive);\n  useEffect(() => {\n    toggleIsActive();\n    return toggleIsActive();\n  }, []);\n\n  const { Main, AboutMe, Experience, Resume, Contact } = HomeContent;\n\n  const homeContentArray = [Main, AboutMe, Experience, Resume, Contact];\n\n  return (\n    <div className={`home-page`}>\n      {homeContentArray.map((content) => (\n        <DisplayCard content={content} />\n      ))}\n    </div>\n  );\n};\n","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/AboutMe/AboutMe.jsx",[],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/Resume/Resume.jsx",[],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/pages/Contact/Contact.jsx",[],"/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/Switch.js",["70","71"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Header } from './navigation/Header/Header';\nimport { Home } from './pages/Home/Home';\nimport { AboutMe } from './pages/AboutMe/AboutMe';\nimport { Resume } from './pages/Resume/Resume';\nimport { Contact } from './pages/Contact/Contact';\n\nexport const SwitchComponent = () => {\n  const [activePath, setActivePath] = useState('Home');\n  const onRender = (path) => {\n    setActivePath(path);\n  };\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        component={Home}\n        isActive={activePath === 'Home'}\n        onRender={onRender}\n      />\n      <Route\n        exact\n        path=\"/About\"\n        component={AboutMe}\n        isActive={activePath === 'About'}\n        onRender={onRender}\n      />\n      <Route\n        exact\n        path=\"/Experience\"\n        component={() => <h1>Experience Page</h1>}\n        isActive={activePath === 'Experience'}\n        onRender={onRender}\n      />\n      <Route\n        exact\n        path=\"/Resume\"\n        component={Resume}\n        isActive={activePath === 'Resume'}\n        onRender={onRender}\n      />\n      <Route\n        exact\n        path=\"/Contact\"\n        component={Contact}\n        isActive={activePath === 'Contact'}\n        onRender={onRender}\n      />\n    </Switch>\n  );\n};\n","/Users/jameshankins/My-Projects/Portfolio/Portfolio-2020/my-portfolio/src/components/Display Card/index.tsx",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":35,"nodeType":"80","messageId":"81","endLine":3,"endColumn":41},{"ruleId":"78","severity":1,"message":"82","line":3,"column":43,"nodeType":"80","messageId":"81","endLine":3,"endColumn":48},{"ruleId":"78","severity":1,"message":"83","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"84","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":17},{"ruleId":"78","severity":1,"message":"85","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":16},{"ruleId":"78","severity":1,"message":"86","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":63,"column":6,"nodeType":"89","endLine":63,"endColumn":58,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":12,"column":6,"nodeType":"89","endLine":12,"endColumn":8,"suggestions":"92"},{"ruleId":"78","severity":1,"message":"93","line":2,"column":27,"nodeType":"80","messageId":"81","endLine":2,"endColumn":33},{"ruleId":"78","severity":1,"message":"94","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Home' is defined but never used.","'AboutMe' is defined but never used.","'Resume' is defined but never used.","'Contact' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'state.currentIndex', 'state.wordsTyped', 'state.writing', 'textArray', and 'typeSpeed'. Either include them or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'toggleIsActive'. Either include it or remove the dependency array.",["98"],"'Router' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [animateTyping, completeCurrentWord, state.currentIndex, state.wordsTyped, state.writing, textArray, toggleIsTyping, typeSpeed]",{"range":"103","text":"104"},"Update the dependencies array to be: [toggleIsActive]",{"range":"105","text":"106"},[1468,1520],"[animateTyping, completeCurrentWord, state.currentIndex, state.wordsTyped, state.writing, textArray, toggleIsTyping, typeSpeed]",[409,411],"[toggleIsActive]"]